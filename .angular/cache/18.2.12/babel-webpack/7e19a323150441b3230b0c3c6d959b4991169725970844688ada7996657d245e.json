{"ast":null,"code":"\"use strict\";\n\n// ***********************************************\n// This example namespace declaration will help\n// with Intellisense and code completion in your\n// IDE or Text Editor.\n// ***********************************************\n// declare namespace Cypress {\n//   interface Chainable<Subject = any> {\n//     customCommand(param: any): typeof customCommand;\n//   }\n// }\n//\n// function customCommand(param: any): void {\n//   console.warn(param);\n// }\n//\n// NOTE: You can use it like so:\n// Cypress.Commands.add('customCommand', customCommand);\n//\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n//\n//\n// -- This is a parent command --\n// Cypress.Commands.add(\"login\", (email, password) => { ... })\n//\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })","map":{"version":3,"names":[],"sources":["C:\\Users\\XPC\\Documents\\TEC\\2 SEMESTRE 2024\\QA\\QA-Avance3\\cypress\\support\\commands.ts"],"sourcesContent":["// ***********************************************\r\n// This example namespace declaration will help\r\n// with Intellisense and code completion in your\r\n// IDE or Text Editor.\r\n// ***********************************************\r\n// declare namespace Cypress {\r\n//   interface Chainable<Subject = any> {\r\n//     customCommand(param: any): typeof customCommand;\r\n//   }\r\n// }\r\n//\r\n// function customCommand(param: any): void {\r\n//   console.warn(param);\r\n// }\r\n//\r\n// NOTE: You can use it like so:\r\n// Cypress.Commands.add('customCommand', customCommand);\r\n//\r\n// ***********************************************\r\n// This example commands.js shows you how to\r\n// create various custom commands and overwrite\r\n// existing commands.\r\n//\r\n// For more comprehensive examples of custom\r\n// commands please read more here:\r\n// https://on.cypress.io/custom-commands\r\n// ***********************************************\r\n//\r\n//\r\n// -- This is a parent command --\r\n// Cypress.Commands.add(\"login\", (email, password) => { ... })\r\n//\r\n//\r\n// -- This is a child command --\r\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\r\n//\r\n//\r\n// -- This is a dual command --\r\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\r\n//\r\n//\r\n// -- This will overwrite an existing command --\r\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}