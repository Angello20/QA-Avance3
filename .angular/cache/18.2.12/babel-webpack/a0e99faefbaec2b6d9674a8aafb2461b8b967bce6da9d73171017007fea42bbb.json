{"ast":null,"code":"/**\n * @cypress/angular v0.0.0-development\n * (c) 2024 Cypress.io\n * Released under the MIT License\n */\n\nimport 'zone.js';\nimport 'zone.js/testing';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, Component, EventEmitter, SimpleChange, ErrorHandler } from '@angular/core';\nimport { getTestBed, TestComponentRenderer, TestBed } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nconst ROOT_SELECTOR = '[data-cy-root]';\n/**\n * Gets the root element used to mount the component.\n * @returns {HTMLElement} The root element\n * @throws {Error} If the root element is not found\n */\nconst getContainerEl = () => {\n  const el = document.querySelector(ROOT_SELECTOR);\n  if (el) {\n    return el;\n  }\n  throw Error(`No element found that matches selector ${ROOT_SELECTOR}. Please add a root element with data-cy-root attribute to your \"component-index.html\" file so that Cypress can attach your component to the DOM.`);\n};\n/**\n * Utility function to register CT side effects and run cleanup code during the \"test:before:run\" Cypress hook\n * @param optionalCallback Callback to be called before the next test runs\n */\nfunction setupHooks(optionalCallback) {\n  // We don't want CT side effects to run when e2e\n  // testing so we early return.\n  // System test to verify CT side effects do not pollute e2e: system-tests/test/e2e_with_mount_import_spec.ts\n  if (Cypress.testingType !== 'component') {\n    return;\n  }\n  // When running component specs, we cannot allow \"cy.visit\"\n  // because it will wipe out our preparation work, and does not make much sense\n  // thus we overwrite \"cy.visit\" to throw an error\n  Cypress.Commands.overwrite('visit', () => {\n    throw new Error('cy.visit from a component spec is not allowed');\n  });\n  Cypress.Commands.overwrite('session', () => {\n    throw new Error('cy.session from a component spec is not allowed');\n  });\n  Cypress.Commands.overwrite('origin', () => {\n    throw new Error('cy.origin from a component spec is not allowed');\n  });\n  // @ts-ignore\n  Cypress.on('test:before:after:run:async', () => {\n    optionalCallback === null || optionalCallback === void 0 ? void 0 : optionalCallback();\n  });\n}\n\n/**\n * @hack fixes \"Mocha has already been patched with Zone\" error.\n */\n// @ts-ignore\nwindow.Mocha['__zone_patch__'] = false;\nlet activeFixture = null;\nfunction cleanup() {\n  // Not public, we need to call this to remove the last component from the DOM\n  try {\n    getTestBed().tearDownTestingModule();\n  } catch (e) {\n    const notSupportedError = new Error(`Failed to teardown component. The version of Angular you are using may not be officially supported.`);\n    notSupportedError.docsUrl = 'https://on.cypress.io/component-framework-configuration';\n    throw notSupportedError;\n  }\n  getTestBed().resetTestingModule();\n  activeFixture = null;\n}\n// 'zone.js/testing' is not properly aliasing `it.skip` but it does provide `xit`/`xspecify`\n// Written up under https://github.com/angular/angular/issues/46297 but is not seeing movement\n// so we'll patch here pending a fix in that library\n// @ts-ignore Ignore so that way we can bypass semantic error TS7017: Element implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\nglobalThis.it.skip = globalThis.xit;\nlet CypressAngularErrorHandler = class CypressAngularErrorHandler {\n  handleError(error) {\n    throw error;\n  }\n};\nCypressAngularErrorHandler = __decorate([Injectable()], CypressAngularErrorHandler);\n/**\n * Bootstraps the TestModuleMetaData passed to the TestBed\n *\n * @param {Type<T>} component Angular component being mounted\n * @param {MountConfig} config TestBed configuration passed into the mount function\n * @returns {MountConfig} MountConfig\n */\nfunction bootstrapModule(component, config) {\n  var _a;\n  const testModuleMetaData = __rest(config, [\"componentProperties\"]);\n  if (!testModuleMetaData.declarations) {\n    testModuleMetaData.declarations = [];\n  }\n  if (!testModuleMetaData.imports) {\n    testModuleMetaData.imports = [];\n  }\n  if (!testModuleMetaData.providers) {\n    testModuleMetaData.providers = [];\n  }\n  // Replace default error handler since it will swallow uncaught exceptions.\n  // We want these to be uncaught so Cypress catches it and fails the test\n  testModuleMetaData.providers.push({\n    provide: ErrorHandler,\n    useClass: CypressAngularErrorHandler\n  });\n  // check if the component is a standalone component\n  if ((_a = component.Éµcmp) === null || _a === void 0 ? void 0 : _a.standalone) {\n    testModuleMetaData.imports.push(component);\n  } else {\n    testModuleMetaData.declarations.push(component);\n  }\n  if (!testModuleMetaData.imports.includes(CommonModule)) {\n    testModuleMetaData.imports.push(CommonModule);\n  }\n  return testModuleMetaData;\n}\nlet CypressTestComponentRenderer = class CypressTestComponentRenderer extends TestComponentRenderer {\n  insertRootElement(rootElId) {\n    this.removeAllRootElements();\n    const rootElement = getContainerEl();\n    rootElement.setAttribute('id', rootElId);\n  }\n  removeAllRootElements() {\n    getContainerEl().innerHTML = '';\n  }\n};\nCypressTestComponentRenderer = __decorate([Injectable()], CypressTestComponentRenderer);\n/**\n * Initializes the TestBed\n *\n * @param {Type<T> | string} component Angular component being mounted or its template\n * @param {MountConfig} config TestBed configuration passed into the mount function\n * @returns {Type<T>} componentFixture\n */\nfunction initTestBed(component, config) {\n  const componentFixture = createComponentFixture(component);\n  getTestBed().configureTestingModule(Object.assign({}, bootstrapModule(componentFixture, config)));\n  getTestBed().overrideProvider(TestComponentRenderer, {\n    useValue: new CypressTestComponentRenderer()\n  });\n  return componentFixture;\n}\nlet WrapperComponent = class WrapperComponent {};\nWrapperComponent = __decorate([Component({\n  selector: 'cy-wrapper-component',\n  template: ''\n})], WrapperComponent);\n/**\n * Returns the Component if Type<T> or creates a WrapperComponent\n *\n * @param {Type<T> | string} component The component you want to create a fixture of\n * @returns {Type<T> | WrapperComponent}\n */\nfunction createComponentFixture(component) {\n  if (typeof component === 'string') {\n    // getTestBed().overrideTemplate is available in v14+\n    // The static TestBed.overrideTemplate is available across versions\n    TestBed.overrideTemplate(WrapperComponent, component);\n    return WrapperComponent;\n  }\n  return component;\n}\n/**\n * Creates the ComponentFixture\n *\n * @param {Type<T>} component Angular component being mounted\n * @param {MountConfig<T>} config MountConfig\n\n * @returns {ComponentFixture<T>} ComponentFixture\n */\nfunction setupFixture(component, config) {\n  const fixture = getTestBed().createComponent(component);\n  setupComponent(config, fixture);\n  fixture.whenStable().then(() => {\n    var _a;\n    fixture.autoDetectChanges((_a = config.autoDetectChanges) !== null && _a !== void 0 ? _a : true);\n  });\n  return fixture;\n}\n/**\n * Gets the componentInstance and Object.assigns any componentProperties() passed in the MountConfig\n *\n * @param {MountConfig} config TestBed configuration passed into the mount function\n * @param {ComponentFixture<T>} fixture Fixture for debugging and testing a component.\n * @returns {T} Component being mounted\n */\nfunction setupComponent(config, fixture) {\n  let component = fixture.componentInstance;\n  if (config === null || config === void 0 ? void 0 : config.componentProperties) {\n    component = Object.assign(component, config.componentProperties);\n  }\n  if (config.autoSpyOutputs) {\n    Object.keys(component).forEach(key => {\n      const property = component[key];\n      if (property instanceof EventEmitter) {\n        component[key] = createOutputSpy(`${key}Spy`);\n      }\n    });\n  }\n  // Manually call ngOnChanges when mounting components using the class syntax.\n  // This is necessary because we are assigning input values to the class directly\n  // on mount and therefore the ngOnChanges() lifecycle is not triggered.\n  if (component.ngOnChanges && config.componentProperties) {\n    const {\n      componentProperties\n    } = config;\n    const simpleChanges = Object.entries(componentProperties).reduce((acc, [key, value]) => {\n      acc[key] = new SimpleChange(null, value, true);\n      return acc;\n    }, {});\n    if (Object.keys(componentProperties).length > 0) {\n      component.ngOnChanges(simpleChanges);\n    }\n  }\n}\n/**\n * Mounts an Angular component inside Cypress browser\n *\n * @param component Angular component being mounted or its template\n * @param config configuration used to configure the TestBed\n * @example\n * import { mount } from '@cypress/angular'\n * import { StepperComponent } from './stepper.component'\n * import { MyService } from 'services/my.service'\n * import { SharedModule } from 'shared/shared.module';\n * it('mounts', () => {\n *    mount(StepperComponent, {\n *      providers: [MyService],\n *      imports: [SharedModule]\n *    })\n *    cy.get('[data-cy=increment]').click()\n *    cy.get('[data-cy=counter]').should('have.text', '1')\n * })\n *\n * // or\n *\n * it('mounts with template', () => {\n *   mount('<app-stepper></app-stepper>', {\n *     declarations: [StepperComponent],\n *   })\n * })\n *\n * @see {@link https://on.cypress.io/mounting-angular} for more details.\n *\n * @returns A component and component fixture\n */\nfunction mount(component, config = {}) {\n  // Remove last mounted component if cy.mount is called more than once in a test\n  if (activeFixture) {\n    cleanup();\n  }\n  const componentFixture = initTestBed(component, config);\n  activeFixture = setupFixture(componentFixture, config);\n  const mountResponse = {\n    fixture: activeFixture,\n    component: activeFixture.componentInstance\n  };\n  const logMessage = typeof component === 'string' ? 'Component' : componentFixture.name;\n  Cypress.log({\n    name: 'mount',\n    message: logMessage,\n    consoleProps: () => ({\n      result: mountResponse\n    })\n  });\n  return cy.wrap(mountResponse, {\n    log: false\n  });\n}\n/**\n * Creates a new Event Emitter and then spies on it's `emit` method\n *\n * @param {string} alias name you want to use for your cy.spy() alias\n * @returns EventEmitter<T>\n * @example\n * import { StepperComponent } from './stepper.component'\n * import { mount, createOutputSpy } from '@cypress/angular'\n *\n * it('Has spy', () => {\n *   mount(StepperComponent, { componentProperties: { change: createOutputSpy('changeSpy') } })\n *   cy.get('[data-cy=increment]').click()\n *   cy.get('@changeSpy').should('have.been.called')\n * })\n */\nconst createOutputSpy = alias => {\n  const emitter = new EventEmitter();\n  cy.spy(emitter, 'emit').as(alias);\n  return emitter;\n};\n// Only needs to run once, we reset before each test\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\n  teardown: {\n    destroyAfterEach: false\n  }\n});\nsetupHooks(cleanup);\nexport { CypressTestComponentRenderer, createOutputSpy, mount };","map":{"version":3,"names":["CommonModule","Injectable","Component","EventEmitter","SimpleChange","ErrorHandler","getTestBed","TestComponentRenderer","TestBed","BrowserDynamicTestingModule","platformBrowserDynamicTesting","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","SuppressedError","error","suppressed","message","Error","name","ROOT_SELECTOR","getContainerEl","el","document","querySelector","setupHooks","optionalCallback","Cypress","testingType","Commands","overwrite","on","window","Mocha","activeFixture","cleanup","tearDownTestingModule","notSupportedError","docsUrl","resetTestingModule","globalThis","it","skip","xit","CypressAngularErrorHandler","handleError","bootstrapModule","component","config","_a","testModuleMetaData","declarations","imports","providers","push","provide","useClass","Éµcmp","standalone","includes","CypressTestComponentRenderer","insertRootElement","rootElId","removeAllRootElements","rootElement","setAttribute","innerHTML","initTestBed","componentFixture","createComponentFixture","configureTestingModule","assign","overrideProvider","useValue","WrapperComponent","selector","template","overrideTemplate","setupFixture","fixture","createComponent","setupComponent","whenStable","then","autoDetectChanges","componentInstance","componentProperties","autoSpyOutputs","keys","forEach","property","createOutputSpy","ngOnChanges","simpleChanges","entries","reduce","acc","value","mount","mountResponse","logMessage","log","consoleProps","result","cy","wrap","alias","emitter","spy","as","initTestEnvironment","teardown","destroyAfterEach"],"sources":["C:/Users/XPC/Documents/TEC/2 SEMESTRE 2024/QA/QA-Avance3/node_modules/cypress/angular/dist/index.js"],"sourcesContent":["\n/**\n * @cypress/angular v0.0.0-development\n * (c) 2024 Cypress.io\n * Released under the MIT License\n */\n\nimport 'zone.js';\nimport 'zone.js/testing';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, Component, EventEmitter, SimpleChange, ErrorHandler } from '@angular/core';\nimport { getTestBed, TestComponentRenderer, TestBed } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nconst ROOT_SELECTOR = '[data-cy-root]';\n/**\n * Gets the root element used to mount the component.\n * @returns {HTMLElement} The root element\n * @throws {Error} If the root element is not found\n */\nconst getContainerEl = () => {\n    const el = document.querySelector(ROOT_SELECTOR);\n    if (el) {\n        return el;\n    }\n    throw Error(`No element found that matches selector ${ROOT_SELECTOR}. Please add a root element with data-cy-root attribute to your \"component-index.html\" file so that Cypress can attach your component to the DOM.`);\n};\n/**\n * Utility function to register CT side effects and run cleanup code during the \"test:before:run\" Cypress hook\n * @param optionalCallback Callback to be called before the next test runs\n */\nfunction setupHooks(optionalCallback) {\n    // We don't want CT side effects to run when e2e\n    // testing so we early return.\n    // System test to verify CT side effects do not pollute e2e: system-tests/test/e2e_with_mount_import_spec.ts\n    if (Cypress.testingType !== 'component') {\n        return;\n    }\n    // When running component specs, we cannot allow \"cy.visit\"\n    // because it will wipe out our preparation work, and does not make much sense\n    // thus we overwrite \"cy.visit\" to throw an error\n    Cypress.Commands.overwrite('visit', () => {\n        throw new Error('cy.visit from a component spec is not allowed');\n    });\n    Cypress.Commands.overwrite('session', () => {\n        throw new Error('cy.session from a component spec is not allowed');\n    });\n    Cypress.Commands.overwrite('origin', () => {\n        throw new Error('cy.origin from a component spec is not allowed');\n    });\n    // @ts-ignore\n    Cypress.on('test:before:after:run:async', () => {\n        optionalCallback === null || optionalCallback === void 0 ? void 0 : optionalCallback();\n    });\n}\n\n/**\n * @hack fixes \"Mocha has already been patched with Zone\" error.\n */\n// @ts-ignore\nwindow.Mocha['__zone_patch__'] = false;\nlet activeFixture = null;\nfunction cleanup() {\n    // Not public, we need to call this to remove the last component from the DOM\n    try {\n        getTestBed().tearDownTestingModule();\n    }\n    catch (e) {\n        const notSupportedError = new Error(`Failed to teardown component. The version of Angular you are using may not be officially supported.`);\n        notSupportedError.docsUrl = 'https://on.cypress.io/component-framework-configuration';\n        throw notSupportedError;\n    }\n    getTestBed().resetTestingModule();\n    activeFixture = null;\n}\n// 'zone.js/testing' is not properly aliasing `it.skip` but it does provide `xit`/`xspecify`\n// Written up under https://github.com/angular/angular/issues/46297 but is not seeing movement\n// so we'll patch here pending a fix in that library\n// @ts-ignore Ignore so that way we can bypass semantic error TS7017: Element implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\nglobalThis.it.skip = globalThis.xit;\nlet CypressAngularErrorHandler = class CypressAngularErrorHandler {\n    handleError(error) {\n        throw error;\n    }\n};\nCypressAngularErrorHandler = __decorate([\n    Injectable()\n], CypressAngularErrorHandler);\n/**\n * Bootstraps the TestModuleMetaData passed to the TestBed\n *\n * @param {Type<T>} component Angular component being mounted\n * @param {MountConfig} config TestBed configuration passed into the mount function\n * @returns {MountConfig} MountConfig\n */\nfunction bootstrapModule(component, config) {\n    var _a;\n    const testModuleMetaData = __rest(config, [\"componentProperties\"]);\n    if (!testModuleMetaData.declarations) {\n        testModuleMetaData.declarations = [];\n    }\n    if (!testModuleMetaData.imports) {\n        testModuleMetaData.imports = [];\n    }\n    if (!testModuleMetaData.providers) {\n        testModuleMetaData.providers = [];\n    }\n    // Replace default error handler since it will swallow uncaught exceptions.\n    // We want these to be uncaught so Cypress catches it and fails the test\n    testModuleMetaData.providers.push({\n        provide: ErrorHandler,\n        useClass: CypressAngularErrorHandler,\n    });\n    // check if the component is a standalone component\n    if ((_a = component.Éµcmp) === null || _a === void 0 ? void 0 : _a.standalone) {\n        testModuleMetaData.imports.push(component);\n    }\n    else {\n        testModuleMetaData.declarations.push(component);\n    }\n    if (!testModuleMetaData.imports.includes(CommonModule)) {\n        testModuleMetaData.imports.push(CommonModule);\n    }\n    return testModuleMetaData;\n}\nlet CypressTestComponentRenderer = class CypressTestComponentRenderer extends TestComponentRenderer {\n    insertRootElement(rootElId) {\n        this.removeAllRootElements();\n        const rootElement = getContainerEl();\n        rootElement.setAttribute('id', rootElId);\n    }\n    removeAllRootElements() {\n        getContainerEl().innerHTML = '';\n    }\n};\nCypressTestComponentRenderer = __decorate([\n    Injectable()\n], CypressTestComponentRenderer);\n/**\n * Initializes the TestBed\n *\n * @param {Type<T> | string} component Angular component being mounted or its template\n * @param {MountConfig} config TestBed configuration passed into the mount function\n * @returns {Type<T>} componentFixture\n */\nfunction initTestBed(component, config) {\n    const componentFixture = createComponentFixture(component);\n    getTestBed().configureTestingModule(Object.assign({}, bootstrapModule(componentFixture, config)));\n    getTestBed().overrideProvider(TestComponentRenderer, { useValue: new CypressTestComponentRenderer() });\n    return componentFixture;\n}\nlet WrapperComponent = class WrapperComponent {\n};\nWrapperComponent = __decorate([\n    Component({ selector: 'cy-wrapper-component', template: '' })\n], WrapperComponent);\n/**\n * Returns the Component if Type<T> or creates a WrapperComponent\n *\n * @param {Type<T> | string} component The component you want to create a fixture of\n * @returns {Type<T> | WrapperComponent}\n */\nfunction createComponentFixture(component) {\n    if (typeof component === 'string') {\n        // getTestBed().overrideTemplate is available in v14+\n        // The static TestBed.overrideTemplate is available across versions\n        TestBed.overrideTemplate(WrapperComponent, component);\n        return WrapperComponent;\n    }\n    return component;\n}\n/**\n * Creates the ComponentFixture\n *\n * @param {Type<T>} component Angular component being mounted\n * @param {MountConfig<T>} config MountConfig\n\n * @returns {ComponentFixture<T>} ComponentFixture\n */\nfunction setupFixture(component, config) {\n    const fixture = getTestBed().createComponent(component);\n    setupComponent(config, fixture);\n    fixture.whenStable().then(() => {\n        var _a;\n        fixture.autoDetectChanges((_a = config.autoDetectChanges) !== null && _a !== void 0 ? _a : true);\n    });\n    return fixture;\n}\n/**\n * Gets the componentInstance and Object.assigns any componentProperties() passed in the MountConfig\n *\n * @param {MountConfig} config TestBed configuration passed into the mount function\n * @param {ComponentFixture<T>} fixture Fixture for debugging and testing a component.\n * @returns {T} Component being mounted\n */\nfunction setupComponent(config, fixture) {\n    let component = fixture.componentInstance;\n    if (config === null || config === void 0 ? void 0 : config.componentProperties) {\n        component = Object.assign(component, config.componentProperties);\n    }\n    if (config.autoSpyOutputs) {\n        Object.keys(component).forEach((key) => {\n            const property = component[key];\n            if (property instanceof EventEmitter) {\n                component[key] = createOutputSpy(`${key}Spy`);\n            }\n        });\n    }\n    // Manually call ngOnChanges when mounting components using the class syntax.\n    // This is necessary because we are assigning input values to the class directly\n    // on mount and therefore the ngOnChanges() lifecycle is not triggered.\n    if (component.ngOnChanges && config.componentProperties) {\n        const { componentProperties } = config;\n        const simpleChanges = Object.entries(componentProperties).reduce((acc, [key, value]) => {\n            acc[key] = new SimpleChange(null, value, true);\n            return acc;\n        }, {});\n        if (Object.keys(componentProperties).length > 0) {\n            component.ngOnChanges(simpleChanges);\n        }\n    }\n}\n/**\n * Mounts an Angular component inside Cypress browser\n *\n * @param component Angular component being mounted or its template\n * @param config configuration used to configure the TestBed\n * @example\n * import { mount } from '@cypress/angular'\n * import { StepperComponent } from './stepper.component'\n * import { MyService } from 'services/my.service'\n * import { SharedModule } from 'shared/shared.module';\n * it('mounts', () => {\n *    mount(StepperComponent, {\n *      providers: [MyService],\n *      imports: [SharedModule]\n *    })\n *    cy.get('[data-cy=increment]').click()\n *    cy.get('[data-cy=counter]').should('have.text', '1')\n * })\n *\n * // or\n *\n * it('mounts with template', () => {\n *   mount('<app-stepper></app-stepper>', {\n *     declarations: [StepperComponent],\n *   })\n * })\n *\n * @see {@link https://on.cypress.io/mounting-angular} for more details.\n *\n * @returns A component and component fixture\n */\nfunction mount(component, config = {}) {\n    // Remove last mounted component if cy.mount is called more than once in a test\n    if (activeFixture) {\n        cleanup();\n    }\n    const componentFixture = initTestBed(component, config);\n    activeFixture = setupFixture(componentFixture, config);\n    const mountResponse = {\n        fixture: activeFixture,\n        component: activeFixture.componentInstance,\n    };\n    const logMessage = typeof component === 'string' ? 'Component' : componentFixture.name;\n    Cypress.log({\n        name: 'mount',\n        message: logMessage,\n        consoleProps: () => ({ result: mountResponse }),\n    });\n    return cy.wrap(mountResponse, { log: false });\n}\n/**\n * Creates a new Event Emitter and then spies on it's `emit` method\n *\n * @param {string} alias name you want to use for your cy.spy() alias\n * @returns EventEmitter<T>\n * @example\n * import { StepperComponent } from './stepper.component'\n * import { mount, createOutputSpy } from '@cypress/angular'\n *\n * it('Has spy', () => {\n *   mount(StepperComponent, { componentProperties: { change: createOutputSpy('changeSpy') } })\n *   cy.get('[data-cy=increment]').click()\n *   cy.get('@changeSpy').should('have.been.called')\n * })\n */\nconst createOutputSpy = (alias) => {\n    const emitter = new EventEmitter();\n    cy.spy(emitter, 'emit').as(alias);\n    return emitter;\n};\n// Only needs to run once, we reset before each test\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\n    teardown: { destroyAfterEach: false },\n});\nsetupHooks(cleanup);\n\nexport { CypressTestComponentRenderer, createOutputSpy, mount };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}